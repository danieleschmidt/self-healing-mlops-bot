version: '3.8'

services:
  # Main Self-Healing Bot Application
  self-healing-bot:
    build:
      context: .
      dockerfile: Dockerfile.prod
    container_name: self-healing-bot
    environment:
      - ENVIRONMENT=production
      - LOG_LEVEL=INFO
      - GITHUB_APP_ID=${GITHUB_APP_ID}
      - GITHUB_PRIVATE_KEY_PATH=/app/secrets/github-private-key.pem
      - GITHUB_WEBHOOK_SECRET=${GITHUB_WEBHOOK_SECRET}
      - DATABASE_URL=postgresql://postgres:${POSTGRES_PASSWORD}@postgres:5432/self_healing_bot
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/1
      - CELERY_RESULT_BACKEND=redis://redis:6379/2
      - PROMETHEUS_PORT=9090
      - SECRET_KEY=${SECRET_KEY}
      - ENCRYPTION_KEY=${ENCRYPTION_KEY}
      - RATE_LIMIT_PER_MINUTE=300
      - HEALTH_CHECK_INTERVAL=60
    ports:
      - "8080:8080"
      - "9090:9090"
    volumes:
      - ./secrets:/app/secrets:ro
      - app-logs:/app/logs
    depends_on:
      - postgres
      - redis
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - self-healing-network

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: postgres-db
    environment:
      - POSTGRES_DB=self_healing_bot
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d self_healing_bot"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - self-healing-network

  # Redis for Caching and Message Broker
  redis:
    image: redis:7-alpine
    container_name: redis-cache
    command: redis-server --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru
    volumes:
      - redis-data:/data
    ports:
      - "6379:6379"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - self-healing-network

volumes:
  postgres-data:
  redis-data:
  app-logs:

networks:
  self-healing-network:
    driver: bridge