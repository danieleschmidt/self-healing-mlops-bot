apiVersion: apps/v1
kind: Deployment
metadata:
  name: mlops-bot
  namespace: mlops-bot-prod
  labels:
    app: mlops-bot
    version: v1.0.0
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: mlops-bot
  template:
    metadata:
      labels:
        app: mlops-bot
        version: v1.0.0
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: mlops-bot
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
      - name: mlops-bot
        image: mlops-bot:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        - containerPort: 9090
          name: metrics
          protocol: TCP
        env:
        - name: GITHUB_PRIVATE_KEY_PATH
          value: "/etc/github/private-key.pem"
        envFrom:
        - configMapRef:
            name: mlops-bot-config
        - secretRef:
            name: mlops-bot-secrets
        volumeMounts:
        - name: github-private-key
          mountPath: /etc/github
          readOnly: true
        - name: logs
          mountPath: /var/log/mlops-bot
        - name: logging-config
          mountPath: /etc/logging
        resources:
          requests:
            cpu: 200m
            memory: 512Mi
          limits:
            cpu: 1
            memory: 2Gi
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health/ready
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: false
          runAsNonRoot: true
          runAsUser: 1000
      - name: redis-exporter
        image: oliver006/redis_exporter:latest
        ports:
        - containerPort: 9121
          name: redis-metrics
        env:
        - name: REDIS_ADDR
          value: "redis://redis-service:6379"
        resources:
          requests:
            cpu: 50m
            memory: 64Mi
          limits:
            cpu: 100m
            memory: 128Mi
      volumes:
      - name: github-private-key
        secret:
          secretName: github-private-key
          defaultMode: 0400
      - name: logs
        emptyDir:
          sizeLimit: 1Gi
      - name: logging-config
        configMap:
          name: mlops-bot-logging-config
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - mlops-bot
              topologyKey: kubernetes.io/hostname

---
# Celery Worker Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mlops-bot-worker
  namespace: mlops-bot-prod
  labels:
    app: mlops-bot-worker
    version: v1.0.0
spec:
  replicas: 2
  selector:
    matchLabels:
      app: mlops-bot-worker
  template:
    metadata:
      labels:
        app: mlops-bot-worker
        version: v1.0.0
    spec:
      serviceAccountName: mlops-bot
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
      - name: celery-worker
        image: mlops-bot:latest
        command: ["celery", "-A", "self_healing_bot.worker", "worker", "--loglevel=info"]
        envFrom:
        - configMapRef:
            name: mlops-bot-config
        - secretRef:
            name: mlops-bot-secrets
        volumeMounts:
        - name: github-private-key
          mountPath: /etc/github
          readOnly: true
        - name: logs
          mountPath: /var/log/mlops-bot
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits:
            cpu: 500m
            memory: 1Gi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: false
          runAsNonRoot: true
          runAsUser: 1000
      volumes:
      - name: github-private-key
        secret:
          secretName: github-private-key
          defaultMode: 0400
      - name: logs
        emptyDir:
          sizeLimit: 500Mi